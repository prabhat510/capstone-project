{"version":3,"file":"main.js","mappings":"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","sources":["./src/app/add-book/add-book..component.ts","./src/app/add-book/add-book..component.html","./src/app/alert-box/alert-box.component.ts","./src/app/alert-box/alert-box.component.html","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/auth.guard.ts","./src/app/book-detail/book.component.ts","./src/app/book-detail/book.component.html","./src/app/footer/footer.component.ts","./src/app/footer/footer.component.html","./src/app/home/home.component.ts","./src/app/home/home.component.html","./src/app/navbar/nav.component.ts","./src/app/navbar/nav.component.html","./src/app/services/auth.service.ts","./src/app/services/books.service.ts","./src/app/services/token-interceptor.service.ts","./src/app/services/token-storage-service.service.ts","./src/app/update-book/update-book.component.ts","./src/app/update-book/update-book.component.html","./src/app/urls.ts","./src/app/user-login/login.component.ts","./src/app/user-login/login.component.html","./src/app/user-registration/register.component.ts","./src/app/user-registration/register.component.html","./src/environments/environment.ts","./src/main.ts"],"sourcesContent":["import {\n  Component,\n  OnInit,\n  ViewChild,\n  ElementRef,\n  AfterViewInit,\n} from '@angular/core';\nimport { BooksService } from '../services/books.service';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { AuthService } from '../services/auth.service';\nimport { NgForm } from '@angular/forms';\nimport { getServiceUrl } from '../urls';\n\n@Component({\n  selector: 'app-add-book.',\n  templateUrl: './add-book..component.html',\n  styleUrls: ['./add-book.component.css'],\n})\nexport class AddBookComponent implements OnInit, AfterViewInit {\n  showLoader = false;\n  @ViewChild('titleInput') titleInput: ElementRef;\n  @ViewChild('authorInput') authorInput: ElementRef;\n  @ViewChild('publisherInput') publisherInput: ElementRef;\n  @ViewChild('dateInput') dateInput: ElementRef;\n  @ViewChild('genreInput') genreInput: ElementRef;\n  @ViewChild('descriptionInput') descriptionInput: ElementRef;\n  @ViewChild('imageInput') imageInput: ElementRef;\n\n  errorMessage: string = '';\n  loading: boolean = true;\n  bookId_param: string = '';\n  // book attributes---two way data binding\n  book_form = {\n    title: '',\n    author: '',\n    publisher: '',\n    genre: '',\n    description: '',\n    image: '',\n    date_published: '',\n  };\n\n  constructor(\n    private bookservice: BooksService,\n    private router: Router,\n    private activatedroute: ActivatedRoute\n  ) { }\n\n  ngOnInit(): void {\n    this.activatedroute.queryParamMap.subscribe(\n      (params) => (this.bookId_param = params.get('id'))\n    );\n    console.log('book id param', this.bookId_param);\n\n    if (this.bookId_param) {\n      this.bookservice\n        .getBook(\n          `${getServiceUrl().bookServiceAPI}/books/${this.bookId_param}`\n        )\n        .subscribe((data) => {\n          this.populateDom(data);\n          this.loading = false;\n        });\n      // once we got the book that we need to edit, we will populate the dom with the previous data\n    } else {\n      this.loading = false;\n    }\n  }\n  ngAfterViewInit(): void {\n    this.titleInput.nativeElement.focus();\n  }\n  checkInvalidForm() {\n    console.log('checkInvalidForm called ');\n    if (!this.book_form.title) {\n      this.titleInput.nativeElement.focus();\n    } else if (!this.book_form.author) {\n      this.authorInput.nativeElement.focus();\n    } else if (!this.book_form.publisher) {\n      this.publisherInput.nativeElement.focus();\n    } else if (!this.book_form.genre) {\n      this.genreInput.nativeElement.focus();\n    } else if (!this.book_form.image) {\n      this.imageInput.nativeElement.focus();\n    }\n  }\n  populateDom(data: any) {\n    this.book_form.title = data.title;\n    this.book_form.author = data.author;\n    this.book_form.publisher = data.publisher;\n    this.book_form.genre = data.genre;\n    this.book_form.description = data.description;\n    this.book_form.date_published = data.date_published;\n    this.book_form.image = data.image;\n  }\n\n  submitBook(bok_form: NgForm) {\n    this.showLoader = true;\n    if (bok_form.valid) {\n      this.bookservice\n        .addBook(\n          `${getServiceUrl().bookServiceAPI}/books/add/book`,\n          this.book_form\n        )\n        .subscribe((data) => console.log(data));\n      // redirecting to home page\n     setTimeout(() => {\n      this.router.navigate(['']).catch((error => {\n        console.log('error navigating from addBook component', error);\n      }))\n     }, 1000);\n    } else {\n      this.errorMessage = 'Please fill all the fields';\n      this.checkInvalidForm();\n      this.showLoader = false;\n    }\n  }\n  updateBook() {\n    this.bookservice\n      .updateBook(\n        `${getServiceUrl().bookServiceAPI}/books/edit/${this.bookId_param}`,\n        this.book_form\n      )\n      .subscribe((data) => console.log(data));\n    this.router.navigate(['/book', this.bookId_param]);\n  }\n}\n","<div class=\"loader\" *ngIf=\"loading\">\n  <img src=\"assets/loading-state.gif\" alt=\"loading spinner\"/>\n</div>\n<div class=\"book-form\" *ngIf=\"!loading\">\n  <h5 style=\"text-align: center\">Add New Book</h5>\n  <div class=\"error-message\">\n    <p class=\"error\" *ngIf=\"errorMessage\">{{ errorMessage }}</p>\n  </div>\n  <form (ngSubmit)=\"submitBook(bok_form)\" #bok_form=\"ngForm\">\n    <div class=\"input-row\">\n      <label class=\"label\">Book Name:</label>\n      <input\n        #titleInput\n        type=\"text\"\n        class=\"text-input\"\n        id=\"exampleFormControlInput1\"\n        placeholder=\"title..\"\n        [(ngModel)]=\"book_form.title\"\n        name=\"title\"\n        ngModel\n        required\n      />\n    </div>\n    <small\n      class=\"error-message\"\n      *ngIf=\"titleInput.touched && titleInput.errors\"\n    >\n      enter a valid title\n    </small>\n    <div class=\"input-row\">\n      <label for=\"exampleFormControlInput1\" class=\"label\">Author:</label>\n\n      <input\n        #authorInput\n        type=\"text\"\n        class=\"text-input\"\n        id=\"exampleFormControlInput1\"\n        placeholder=\"author..\"\n        [(ngModel)]=\"book_form.author\"\n        name=\"author\"\n        ngModel\n        required\n      />\n    </div>\n    <small\n      class=\"error-message\"\n      *ngIf=\"authorInput.touched && authorInput.errors\"\n    >\n      enter a valid author name\n    </small>\n    <div class=\"input-row\">\n      <label for=\"exampleFormControlInput1\" class=\"form-label\"\n        >Publisher:</label\n      >\n\n      <input\n        #publisherInput\n        type=\"text\"\n        class=\"text-input\"\n        id=\"exampleFormControlInput1\"\n        placeholder=\"publisher..\"\n        [(ngModel)]=\"book_form.publisher\"\n        name=\"publisher\"\n        ngModel\n        required\n      />\n    </div>\n    <small\n      class=\"error-message\"\n      *ngIf=\"publisherInput.touched && publisherInput.errors\"\n    >\n      enter a valid publisher name\n    </small>\n    <div class=\"input-row\">\n      <label for=\"exampleFormControlInput1\" class=\"label\"\n        >Date published:</label\n      >\n\n      <input\n        #dateInput\n        type=\"date\"\n        id=\"exampleFormControlInput1\"\n        placeholder=\"published on..\"\n        [(ngModel)]=\"book_form.date_published\"\n        name=\"date\"\n        ngModel\n        required\n      />\n    </div>\n    <small class=\"error-message\" *ngIf=\"dateInput.touched && dateInput.errors\">\n      choose a valid date\n    </small>\n    <div class=\"input-row\">\n      <label for=\"exampleFormControlInput1\" class=\"label\"> Genre:</label>\n      <select\n        #genreInput\n        aria-label=\".form-select-sm example\"\n        [(ngModel)]=\"book_form.genre\"\n        name=\"genre\"\n        ngModel\n        required\n      >\n        <option selected>select genre</option>\n        <option value=\"fiction\">fiction</option>\n        <option value=\"autobiography\">autobiography</option>\n        <option value=\"science\">science</option>\n        <option value=\"history\">history</option>\n        <option value=\"mathematics\">mathematics</option>\n        <option value=\"law\">law</option>\n        <option value=\"medicine\">medicine</option>\n        <option value=\"technology & engineering\">\n          technology & engineering\n        </option>\n        <option value=\"finance\">finance</option>\n        <option value=\"art\">art</option>\n        <option value=\"travel\">travel</option>\n        <option value=\"self-help book\">self-help book</option>\n        <option value=\"thriller\">thriller</option>\n      </select>\n    </div>\n    <small\n      class=\"error-message\"\n      *ngIf=\"genreInput.touched && genreInput.errors\"\n    >\n      enter a valid genre\n    </small>\n    <div class=\"input-row\">\n      <label for=\"exampleFormControlInput1\" class=\"label\">Description:</label>\n\n      <textarea\n        cols=\"20\"\n        rows=\"7\"\n        #descriptionInput\n        type=\"text\"\n        class=\"text-input\"\n        id=\"exampleFormControlInput1\"\n        placeholder=\"enter description\"\n        [(ngModel)]=\"book_form.description\"\n        name=\"description\"\n        ngModel\n        required\n      ></textarea>\n    </div>\n    <small\n      class=\"error-message\"\n      *ngIf=\"descriptionInput.touched && descriptionInput.errors\"\n    >\n      enter a valid description\n    </small>\n    <div class=\"input-row\">\n      <label for=\"exampleFormControlInput1\" class=\"label\">Image link:</label>\n\n      <input\n        #imageInput\n        type=\"text\"\n        class=\"text-input\"\n        id=\"exampleFormControlInput1\"\n        placeholder=\"image link..\"\n        [(ngModel)]=\"book_form.image\"\n        name=\"image url\"\n        ngModel\n        required\n      />\n    </div>\n    <small\n      class=\"error-message\"\n      *ngIf=\"imageInput.touched && imageInput.errors\"\n    >\n      enter a valid image link\n    </small>\n    <button type=\"submit\" class=\"button\" [ngClass]=\"{'no-padding': showLoader, 'bg-color': showLoader}\">\n      <span *ngIf=\"!showLoader\">Submit</span>\n      <div class=\"mobile-loader\" *ngIf=\"showLoader\">\n        <img src=\"assets/loading-state.gif\" alt=\"loading spinner\"/>\n      </div>\n    </button>\n  </form>\n</div>\n","import { Component, ElementRef, Input, Renderer2 } from '@angular/core';\nimport { AuthService } from '../services/auth.service';\n\n@Component({\n  selector: 'app-alert-box',\n  templateUrl: './alert-box.component.html',\n  styleUrls: ['./alert-box.component.css']\n})\nexport class AlertBoxComponent  {\n\n  @Input() message = 'are you sure you want to logout?';\n  constructor(private authService: AuthService, private renderer: Renderer2, private elementRef: ElementRef) { }\n\n\n  confirmLogOut(logoutUser:boolean) {\n    const body = this.elementRef.nativeElement.ownerDocument.body;\n    if(logoutUser) {\n      this.authService.emitLogout();\n    } else {\n      this.authService.emitCancelLogout();\n    }\n    this.renderer.setStyle(body, 'overflow', 'visible');\n  }\n}\n","<p>alert-box works!</p>\n<div class=\"alert-parent\">\n    <div class=\"alert-box\">\n        <div class=\"box-header\">\n            <span class=\"cross-icon\" (click)=\"confirmLogOut(false)\">&#10005;</span>\n            <img src=\"assets/question.png\" class=\"question-img\" alt=\"\">\n        </div>\n        <div class=\"box-content\">\n            <p class=\"alert-msg\">{{message}}</p>\n            <div class=\"btn-container\">\n                <button (click)=\"confirmLogOut(true)\">Yes</button>\n                <button (click)=\"confirmLogOut(false)\">Cancel</button>\n            </div>\n        </div>\n    </div>\n</div>\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { AddBookComponent } from './add-book/add-book..component';\nimport { BookComponent } from './book-detail/book.component';\nimport { HomeComponent } from './home/home.component';\nimport { LoginComponent } from './user-login/login.component';\nimport { RegisterComponent } from './user-registration/register.component';\nimport { AuthGuard } from './auth.guard';\nimport { UpdateBookComponent } from './update-book/update-book.component';\n\nconst routes: Routes = [\n  {\n    path: '', component: HomeComponent\n  },\n  {\n    path: 'book/:id', component: BookComponent,\n  },\n  {\n    path: 'add-book', component: AddBookComponent,\n    // when we try to navigate to this route, AuthGuard is executed, if it returns true navigation is allowed otherwise it \n    // redirects us to login page\n    canActivate: [AuthGuard]\n  },\n  {\n    path: 'update-book', component: UpdateBookComponent,\n    canActivate: [AuthGuard]\n  },\n  { path: 'login', component: LoginComponent },\n  { path: 'register', component: RegisterComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes, {\n    initialNavigation: 'enabledBlocking'\n})],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n\n// whenever you make a request to the backend, the authVerify method will validate the token that was sent using the HttpInterceptor","import { Component, Inject, OnInit, PLATFORM_ID } from '@angular/core';\nimport { filter } from 'rxjs/operators';\nimport { Router, NavigationEnd } from '@angular/router';\nimport { AuthService } from './services/auth.service';\nimport { TokenStorageServiceService } from './services/token-storage-service.service';\nimport { isPlatformBrowser } from '@angular/common';\n\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n  showAlertBox = false;\n  activeComponentName: string;\n  displayHeader = false;\n  isBrowser = false;\n  constructor(private router: Router, private authService: AuthService,\n     private tokenService: TokenStorageServiceService, @Inject(PLATFORM_ID) private platformId: Object) {\n  this.isBrowser = isPlatformBrowser(platformId);\n  }\n  ngOnInit(): void {\n    if(this.isBrowser) {\n      this.authService.authStatusSubject$.subscribe(res => {\n        if (res.type === 'auth' && (res.value === 'cancel' || res.value === 'logout')) {\n          this.showAlertBox = false;\n        }\n      })\n      // this code fetches the current active route dynamically\n      this.router.events.pipe(filter(event => event instanceof NavigationEnd))\n        .subscribe(route => {\n          const routeEvent = route as any;\n          if(routeEvent.url.includes('login') || routeEvent.url.includes('register')) {\n            this.displayHeader = false;\n          } else {\n            this.displayHeader = true;\n            this.tokenService.setToken('route', routeEvent.url);\n          }\n        }\n        )\n    }\n  }\n}\n","<header *ngIf=\"displayHeader\">\n  <app-nav (logOutInitialted)=\"showAlertBox = true;\"></app-nav>\n</header>\n<main class=\"site-content\">\n<router-outlet></router-outlet>\n</main>\n<footer>\n  <app-footer></app-footer>\n</footer>\n<app-alert-box *ngIf=\"showAlertBox\"></app-alert-box>","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { FormsModule } from '@angular/forms';\nimport { Ng2SearchPipeModule } from 'ng2-search-filter';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { HomeComponent } from './home/home.component';\nimport { BooksService } from './services/books.service';\nimport { BookComponent } from './book-detail/book.component';\nimport { AddBookComponent } from './add-book/add-book..component';\nimport { LoginComponent } from './user-login/login.component';\nimport { RegisterComponent } from './user-registration/register.component';\nimport { AuthGuard } from './auth.guard';\nimport { TokenInterceptor } from './services/token-interceptor.service';\nimport { NavComponent } from './navbar/nav.component';\nimport { FooterComponent } from './footer/footer.component';\nimport { UpdateBookComponent } from './update-book/update-book.component';\nimport { AlertBoxComponent } from './alert-box/alert-box.component';\n\n// the HTTP_INTERCEPTORS module is used to send the token to the backend and verify the token using the TokenInterceptorService \n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HomeComponent,\n    BookComponent,\n    AddBookComponent,\n    LoginComponent,\n    RegisterComponent,\n    NavComponent,\n    FooterComponent,\n    UpdateBookComponent,\n    AlertBoxComponent\n  ],\n  imports: [\n    BrowserModule.withServerTransition({ appId: 'serverApp' }),\n    AppRoutingModule,\n    HttpClientModule,\n    FormsModule,\n    Ng2SearchPipeModule\n  ],\n  providers: [BooksService, AuthGuard, {\n    provide: HTTP_INTERCEPTORS,\n    useClass: TokenInterceptor,\n    multi: true\n  }],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { CanActivate, Router } from '@angular/router';\nimport { AuthService } from './services/auth.service';\nimport { TokenStorageServiceService } from './services/token-storage-service.service';\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n  constructor(\n    private authservice: AuthService, private router: Router, private tokenService: TokenStorageServiceService\n  ) { }\n  // the route guard returns true or false, if the user is logged in it will return true otherwise will navigate it to login page\n  canActivate(): boolean {\n    if (this.authservice.isLoggedIn) {\n      return true;\n    } else {\n      const payload = {token: this.tokenService.getToken('refresh_token')};\n      this.authservice.getNewAccessToken(payload)\n      .subscribe({\n        next: res =>{ \n          this.authservice.setUserData(res);\n          this.router.navigate(['']);\n        },\n        error: error => {\n          console.log('error fetching new token', error);\n          this.authservice.clearUserData();\n          this.router.navigate(['/login']);\n        }\n      });\n    }\n  }\n}\n","import { Component, Inject, OnInit, PLATFORM_ID } from '@angular/core';\nimport { BooksService } from '../services/books.service';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { getServiceUrl } from '../urls';\nimport { AuthService } from '../services/auth.service';\nimport { isPlatformBrowser } from '@angular/common';\n\n@Component({\n  selector: 'app-book',\n  templateUrl: './book.component.html',\n  styleUrls: ['./book.component.css']\n})\nexport class BookComponent implements OnInit {\n  loading = true;\n  isAdmin = false;\n  bookId = '';\n  isBrowser = false;\n  book: any;\n  constructor(private activatedroute: ActivatedRoute, private bookservice: BooksService, private router: Router,\n    private authservice: AuthService,\n    @Inject(PLATFORM_ID) private platformId: Object) { \n      this.isBrowser = isPlatformBrowser(platformId);\n    }\n\n  ngOnInit(): void {\n    if(this.isBrowser) {\n      const isLoggedIn = this.authservice.isLoggedIn;\n      this.bookId = this.activatedroute.snapshot.paramMap.get('id');\n      this.isAdmin = isLoggedIn && JSON.parse(localStorage.getItem('userData'))? JSON.parse(localStorage.getItem('userData')).isAdmin : false;\n      this.bookservice.getBook(`${getServiceUrl().bookServiceAPI}/books/${this.bookId}`).subscribe(data => {\n        this.book = data;\n        this.loading = false;\n        this.bookservice.scrollToTop();\n      });\n    }\n  }\n  \n  removeBook() {\n    this.bookservice.deleteBook(`${getServiceUrl().bookServiceAPI}/books/remove/${this.bookId}`).subscribe();\n    setTimeout(()=> {\n      this.router.navigate(['']).then(() => window.location.reload());\n    }, 1000)\n  }\n  changeBook() {\n    this.router.navigate(['/update-book'], { queryParams: { id: this.bookId } })\n  }\n}\n","<div class=\"container\" *ngIf=\"!loading\">\n  <div class=\"book-container\">\n    <div class=\"book-image\">\n      <img [src]=\"book.image\" alt=\"book image\" />\n    </div>\n    <div class=\"book-data\">\n      <div class=\"book-metadata\">\n        <h5 class=\"book-title\">\n          {{ book.title | titlecase }}\n        </h5>\n        <p class=\"data-row\">\n          <span class=\"placeholder\">author:</span><span class=\"value\">{{ book.author }}</span>\n        </p>\n        <p class=\"data-row\">\n          <span class=\"placeholder\">genre:</span\n          ><span class=\"value\">{{ book.genre | titlecase }}</span>\n        </p>\n        <p class=\"data-row\">\n          <span class=\"placeholder\">published by:</span\n          ><span class=\"value\">{{ book.publisher | titlecase }}</span>\n        </p>\n        <p class=\"data-row\">\n          <span class=\"placeholder\">published on:</span\n          ><span class=\"value\">{{ book.date_published | date }}</span>\n        </p>\n      </div>\n      <div *ngIf=\"isAdmin\">\n        <span class=\"action-buttons\">\n          <button\n            type=\"button\"\n            class=\"button edit-button\"\n            (click)=\"changeBook()\"\n          >\n            <span> <img src=\"assets/icons8-edit-64.png\" alt=\"edit book icon\"/> Edit</span>\n          </button>\n          <button\n            type=\"button\"\n            class=\"button remove-button\"\n            (click)=\"removeBook()\"\n          >\n            <span> <img src=\"assets/icons8-trash-64.png\" alt=\"delete book icon\"/> Delete</span>\n          </button></span\n        >\n      </div>\n    </div>\n  </div>\n  <div class=\"about-section\">\n    <strong>About the Book:</strong>\n    <p>{{ book.description }}</p>\n  </div>\n</div>\n\n<div class=\"loader\" *ngIf=\"loading\">\n  <img src=\"assets/loading-state.gif\" alt=\"loading spinner\"/>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.css']\n})\nexport class FooterComponent implements OnInit {\n\n  year:number;\n\n  ngOnInit(): void {\n    this.year = new Date().getFullYear();\n  }\n}\n","<footer>\n  <div class=\"footer-area\">\n    <div class=\"footer\">\n      <div class=\"brand-name\">\n        <span [routerLink]=\"['/']\">BookStore</span>\n      </div>\n      <div class=\"contact-info\">\n        <span>Contact Info</span>\n        <div class=\"contacts\">\n          <a\n            class=\"contact-link\"\n            href=\"https://www.linkedin.com/in/prabhatbhargav/\"\n            target=\"_blank\"\n            rel=\"noopener\"\n          >\n            <img src=\"/assets/linkedin.png\" alt=\"\" srcset=\"\" /><span class=\"contact-link-text\">linkedin</span>\n          </a>\n          <a\n          class=\"contact-link\"\n            href=\"https://github.com/prabhat510\"\n            target=\"_blank\"\n            rel=\"noopener\"\n          >\n            <img src=\"/assets/github.png\" alt=\"\" srcset=\"\" /><span class=\"contact-link-text\">github</span>\n          </a>\n          <a\n          class=\"contact-link\"\n           href=\"mailto:prabhatbhargava510@gmail.com\">\n            <img src=\"/assets/gmail.png\" alt=\"\" srcset=\"\" /><span class=\"contact-link-text\">gmail</span>\n          </a>\n        </div>\n      </div>\n      <div class=\"footer-form\">\n        <span for=\"\">Get In Touch:</span\n        ><input type=\"text\" placeholder=\"Email\" />\n        <textarea\n          name=\"\"\n          id=\"\"\n          cols=\"10\"\n          rows=\"3\"\n          placeholder=\"Your Query\"\n        ></textarea>\n        <button>SUBMIT</button>\n      </div>\n    </div>\n    <div class=\"copyright\">\n      <p>\n        Copyright &#169;{{ year }} All Rights Reserved | Made By\n        <span style=\"color: purple\">Prabhat Bhargav</span>\n      </p>\n    </div>\n  </div>\n</footer>\n","import { Component, OnInit } from '@angular/core';\nimport { BooksService } from '../services/books.service';\nimport { getServiceUrl } from '../urls';\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  books: any = [];\n  filterTerm: string = '';\n  loading = true;\n  offset = 0;\n  limit = 12;\n  loadingMoreBooks = false;\n  pendingBooksCount = 0;\n  loadMoreOptionAvailable = true;\n  constructor(private booksservice: BooksService) { }\n\n  ngOnInit() {\n    this.loadBooks();\n  }\n  onSelect(event) {\n    console.log(event.target.value);\n    this.booksservice.getAllBooks(`${getServiceUrl().bookServiceAPI}/home/${event.target.value}`).subscribe(data => this.books = data\n    )\n  }\n  loadBooks() {\n    if(!this.loading){this.loadingMoreBooks = true;}\n    this.booksservice.getAllBooks(`${getServiceUrl().bookServiceAPI}/books?offset=${this.offset}&limit=${this.limit}`).subscribe((data: any) => {\n      this.books = this.books.concat(data.books);\n      this.offset += this.limit\n      if(this.loading) {\n        this.pendingBooksCount = data.totalCount;\n        this.loading = false;\n      } else {\n        this.loadingMoreBooks = false;\n      }\n      this.pendingBooksCount -= this.books.length;\n      if(this.pendingBooksCount <=0)this.loadMoreOptionAvailable = false;\n      console.log('total count and pending count', data.totalCount, this.pendingBooksCount);\n    }); \n  }\n  goToTop() {\n    window.scrollTo({top: 0, behavior: 'smooth'});\n  }\n}\n","<div class=\"search\">\n  <input\n    type=\"search\"\n    placeholder=\"Search for books, authors and genre\"\n    aria-label=\"Search\"\n    [(ngModel)]=\"filterTerm\"\n    class=\"search-input\"\n  />\n</div>\n\n<!-- books are displayed here -->\n<div class=\"book-container\" *ngIf=\"!loading\">\n  <!-- to pass _id of the book as a parameter, put it in the second place of routerLink array and also update the \n   path in app-routing.module.ts -->\n  <div\n    class=\"book\"\n    [routerLink]=\"['/book', book._id]\"\n    *ngFor=\"let book of books | filter : filterTerm\"\n  >\n    <div class=\"sub-container\">\n      <img\n        [src]=\"book.image\"\n        class=\"cover-image\"\n        alt=\"book image\"\n        loading=\"lazy\"\n      />\n      <div class=\"book-info\">\n        <p class=\"book-title\">{{ book.title | titlecase }}</p>\n        <p [ngStyle]=\"{'color': 'rgb(51,51,51)'}\">\n          {{ book.author | titlecase }}\n        </p>\n      </div>\n    </div>\n  </div>\n</div>\n<div class=\"btn-container\" *ngIf=\"!loading && !loadingMoreBooks\">\n  <button type=\"button\"class=\"button topBtn\" (click)=\"goToTop()\">Back To Top</button>\n  <button type=\"button\"class=\"button loadmoreBtn\" *ngIf=\"loadMoreOptionAvailable\" (click)=\"loadBooks()\">Load More</button>\n</div>\n<div class=\"loader2\" *ngIf=\"loadingMoreBooks\">\n  <img src=\"assets/loading-state.gif\" alt=\"loading spinner\" />\n</div>\n<div class=\"loader\" *ngIf=\"loading\">\n  <img src=\"assets/loading-state.gif\" alt=\"loading spinner\" />\n</div>\n","import { Component, OnInit, EventEmitter, Output, ElementRef, Renderer2, PLATFORM_ID, Inject } from '@angular/core';\nimport { AuthService } from '../services/auth.service';\nimport { Router } from '@angular/router';\nimport { TokenStorageServiceService } from '../services/token-storage-service.service';\nimport { isPlatformBrowser } from '@angular/common';\n@Component({\n  selector: 'app-nav',\n  templateUrl: './nav.component.html',\n  styleUrls: ['./nav.component.css']\n})\nexport class NavComponent implements OnInit {\n  @Output() logOutInitialted = new EventEmitter();\n  showMenu = false;\n  isAdmin = false;\n  isLoggedIn = false;\n  isBrowser = false;\n  userData:any;\n  constructor(private authservice: AuthService, private router: Router, private tokenService: TokenStorageServiceService,\n private elementRef: ElementRef, private renderer: Renderer2, @Inject(PLATFORM_ID) private platformId: Object) { \n  this.isBrowser = isPlatformBrowser(platformId);\n }\n\n  ngOnInit(): void {\n    if(this.isBrowser) {\n      this.isLoggedIn = this.authservice.isLoggedIn;\n      this.userData = localStorage.getItem('userData') ? JSON.parse(localStorage.getItem('userData')): '';\n      this.authservice.authStatusSubject$.subscribe((res)=> {\n        if(res.type === 'auth' && res.value === 'logout') {\n            this.signOut();\n        } else if(res.type === 'userData') {\n          this.isLoggedIn = this.authservice.isLoggedIn;\n          this.userData = res.value;\n          this.isAdmin = this.userData.isAdmin;\n          console.log('user details emitted', res);\n        } \n      })\n    }\n  }\n  signOut() {\n    this.isLoggedIn = false;\n    const data = {\n      token: this.tokenService.getToken('refresh_token')\n    }\n    this.authservice.logoutUser(data)\n    .subscribe(\n      {\n        next: (res) => console.log('user logged out successfully', res),\n        error: (error)=> console.log('error logging out', error)\n      }\n    );\n    setTimeout(() => {\n    this.router.navigate(['/login']);\n    }, 1000);\n  }\n\n  toggleMenu() {\n    this.showMenu = !this.showMenu;\n  }\n\n  logoutUser() {\n    const body = this.elementRef.nativeElement.ownerDocument.body;\n    this.renderer.setStyle(body, 'overflow', 'hidden');\n    this.logOutInitialted.emit();\n    this.toggleMenu()\n  }\n}\n","<nav class=\"navbar\">\n  <div class=\"brand-title\" [routerLink]=\"['/']\">BookStore</div>\n  <a href=\"javascript:void(0);\" [ngClass]=\"{'cross': showMenu}\" class=\"toggle-button\" (click)=\"toggleMenu()\">\n    <span class=\"bar bar-1\"></span>\n    <span class=\"bar bar-2\"></span>\n    <span class=\"bar bar-3\"></span>\n  </a>\n  <div class=\"navbar-links\" [ngClass]=\"{'active': showMenu}\">\n    <ul [ngClass]=\"{'show': showMenu}\">\n      <li class=\"nav-item\" *ngIf=\"isLoggedIn && userData?.isAdmin\">\n        <a class=\"nav-link\" (click)=\"toggleMenu()\" [routerLink]=\"['/add-book']\">Add book</a>\n      </li>\n      <li *ngIf=\"isLoggedIn\" class=\"nav-item welcome-user\">\n        <a href=\"javascript:void(0);\" (click)=\"logoutUser()\"> Logout </a>\n      </li>\n      <li *ngIf=\"!isLoggedIn\" class=\"nav-item nav-link\">\n        <a (click)=\"toggleMenu()\" [routerLink]=\"['/register']\">Signup</a>\n      </li>\n      <li *ngIf=\"!isLoggedIn\" class=\"nav-item welcome-user nav-link\">\n        <a (click)=\"toggleMenu()\" [routerLink]=\"['/login']\">Login</a>\n      </li>\n    </ul>\n  </div>\n</nav>\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Subject } from 'rxjs';\nimport { Cookie } from 'ng2-cookies';\nimport { TokenStorageServiceService } from './token-storage-service.service';\nimport { getServiceUrl } from '../urls';\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  private authStatusSubject = new Subject<any>();\n  authStatusSubject$ = this.authStatusSubject.asObservable();\n\n  constructor(private httpclient: HttpClient, private tokenService: TokenStorageServiceService) { }\n\n  emitLogout() {\n    this.authStatusSubject.next({type: 'auth', value: 'logout'});\n  }\n\n  emitCancelLogout() {\n    this.authStatusSubject.next({type: 'auth', value: 'cancel'});\n  }\n\n  emitUserLoggedIn(userData: any) {\n    this.authStatusSubject.next({type: 'userData', value: userData});\n  }\n\n  getAccessToken() {\n    return this.tokenService.getToken('token');\n  }\n\n  getRefreshToken() {\n    return this.tokenService.getToken('refresh_token');\n  }\n\n  getCurrentRoute() {\n    return this.tokenService.getToken('route') || null;\n  }\n\n  public get isLoggedIn() {\n    // when the token is set and it has not expired then user is logged in \n    const accessToken = Cookie.get('token');\n    const expiry = localStorage.getItem('expiresIn');\n    console.log('accessToken is', accessToken);\n    if(expiry && accessToken) {\n     if(expiry > new Date().toISOString()) {\n      console.log('token is valid');\n      return true;\n     } \n    }\n    console.log('token has expired');\n    return false;\n  }\n\n  setUserData(data: any) {\n    this.tokenService.setToken('token', data.accessToken);\n    this.tokenService.setToken('refresh_token', data.refreshToken);\n    localStorage.setItem('expiresIn', data.expiresIn);\n  }\n\n  clearUserData() {\n    this.tokenService.deleteAllTokens();\n    localStorage.clear();  \n  }\n\n  registerUser(user: object) {\n    const url = `${getServiceUrl().bookServiceAPI}/auth/register/user`;\n    return this.httpclient.post(url, user)\n  }\n\n  loginUser(user: object) {\n    const url = `${getServiceUrl().authServiceAPI}/auth/login`;\n    return this.httpclient.post(url, user);\n  }\n\n  getNewAccessToken(data: object) {\n    const url = `${getServiceUrl().authServiceAPI}/auth/token`;\n    return this.httpclient.post(url, data);\n  }\n\n  logoutUser(data: any) {  \n    const url = `${getServiceUrl().authServiceAPI}/auth/logout`;\n    this.clearUserData();\n    // always subscribe to the observables, if they are not subscribed request is not send to the server\n    return this.httpclient.delete(url, {body: data});\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BooksService {\n\n  constructor(private httpclient: HttpClient) {\n\n  }\n  getAllBooks(url: string) {\n    return this.httpclient.get(url)\n  }\n  getBook(url: string) {\n    return this.httpclient.get(url)\n  }\n  deleteBook(url: string) {\n    console.log('deletebook called');\n    \n    return this.httpclient.delete(url)\n  }\n  addBook(url: string, body: object) {\n    return this.httpclient.post(url, body)\n  }\n  updateBook(url: string, body: object) {\n    return this.httpclient.put(url, body)\n  }\n  scrollToTop() {\n    window.scrollTo({behavior: 'smooth', top: 0});\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpInterceptor, HttpRequest, HttpHandler, HttpEvent, HttpResponse, HttpErrorResponse } from '@angular/common/http';\nimport { Observable, BehaviorSubject, throwError } from 'rxjs';\nimport { catchError, switchMap, filter, take } from 'rxjs/operators';\nimport { AuthService } from './auth.service';\nimport { TokenStorageServiceService } from './token-storage-service.service';\n\n@Injectable()\nexport class TokenInterceptor implements HttpInterceptor {\n  private refreshTokenInProgress = false;\n  private refreshTokenSubject: BehaviorSubject<any> = new BehaviorSubject<any>(null);\n\n  constructor(\n    private authService: AuthService, // Replace with your authentication service\n    private tokenService: TokenStorageServiceService\n  ) {}\n\n  intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n    const accessToken = this.authService.getAccessToken();\n    if (accessToken) {\n      request = this.addAccessTokenToRequest(request, accessToken);\n    }\n\n    return next.handle(request).pipe(\n      catchError((error: any) => {\n        if (!request.url.includes('login') && !request.url.includes('logout') && error instanceof HttpErrorResponse) {\n          // Token expired or unauthorized\n          if (!this.refreshTokenInProgress) {\n            this.refreshTokenInProgress = true;\n            this.refreshTokenSubject.next(null);\n\n            // Call your refresh token method and obtain a new access token\n            return this.authService.getNewAccessToken({token: this.authService.getRefreshToken()}).pipe(\n              switchMap((newAccessToken: any) => {\n                console.log('newAccessToken response', newAccessToken);\n                this.refreshTokenInProgress = false;\n                this.refreshTokenSubject.next(newAccessToken);\n                request = this.addAccessTokenToRequest(request, newAccessToken.accessToken);\n                this.authService.setUserData(newAccessToken);\n                return next.handle(request);\n              }),\n              catchError((refreshError: any) => {\n                this.authService.logoutUser({token: this.authService.getRefreshToken()}); // Log the user out if refresh token fails\n                return throwError(()=> new Error(refreshError));\n              })\n            );\n          } else {\n            // Wait for the new token and then retry the request\n            return this.refreshTokenSubject.pipe(\n              filter((token) => token !== null),\n              take(1),\n              switchMap((newAccessToken) => {\n                request = this.addAccessTokenToRequest(request, newAccessToken);\n                return next.handle(request);\n              })\n            );\n          }\n        } else {\n          return throwError(()=> new Error(error));\n        }\n      })\n    );\n  }\n\n  private addAccessTokenToRequest(request: HttpRequest<any>, accessToken: string): HttpRequest<any> {\n    return request.clone({\n      setHeaders: {\n        Authorization: `Bearer ${accessToken}`,\n      },\n    });\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Cookie } from 'ng2-cookies';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TokenStorageServiceService {\n\n  getToken(key: string) {\n    return Cookie.get(key);\n  }\n\n  setToken(key: string, value: string) {\n    Cookie.set(key, value);\n  }\n\n  removeToken(key:string) {\n    Cookie.delete(key);  \n  }\n\n  deleteAllTokens() {\n    Cookie.deleteAll();\n  }\n}\n","import { Component, OnInit, ViewChild, ElementRef } from '@angular/core';\nimport { BooksService } from '../services/books.service';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { NgForm } from '@angular/forms';\nimport { getServiceUrl } from '../urls';\n\n\n@Component({\n  selector: 'app-update-book',\n  templateUrl: './update-book.component.html',\n  styleUrls: ['./update-book.component.css']\n})\nexport class UpdateBookComponent implements OnInit {\n  showLoader = false;\n  @ViewChild('titleInput') titleInput: ElementRef;\n  @ViewChild('authorInput') authorInput: ElementRef;\n  @ViewChild('publisherInput') publisherInput: ElementRef;\n  @ViewChild('dateInput') dateInput: ElementRef;\n  @ViewChild('genreInput') genreInput: ElementRef;\n  @ViewChild('descriptionInput') descriptionInput: ElementRef;\n  @ViewChild('imageInput') imageInput: ElementRef;\n\n  errorMessage: string = '';\n  loading: boolean = true;\n  bookId_param: string = ''\n  // book attributes---two way data binding\n  book_form = {\n    title: '',\n    author: '',\n    publisher: '',\n    genre: '',\n    description: '',\n    image: '',\n    date_published: ''\n  };\n\n\n  constructor(private bookservice: BooksService, private router: Router, private activatedroute: ActivatedRoute) {\n\n  }\n\n  ngOnInit(): void {\n    this.activatedroute.queryParamMap.subscribe(params => this.bookId_param = params.get('id'));\n    console.log('book id param', this.bookId_param);\n\n    if (this.bookId_param) {\n      this.bookservice.getBook(`${getServiceUrl().bookServiceAPI}/books/${this.bookId_param}`).subscribe(data => {\n        this.populateDom(data);\n        this.loading = false\n        this.bookservice.scrollToTop();\n      })\n      // once we got the book that we need to edit, we will populate the dom with the previous data\n    } else {\n      this.loading = false;\n      this.bookservice.scrollToTop();\n    }\n  }\n  checkInvalidForm() {\n    if (!this.book_form.title) {\n      this.titleInput.nativeElement.focus();\n    } else if (!this.book_form.author) {\n      this.authorInput.nativeElement.focus();\n    } else if (!this.book_form.publisher) {\n      this.publisherInput.nativeElement.focus();\n    } else if (!this.book_form.genre) {\n      this.genreInput.nativeElement.focus();\n    } else if (!this.book_form.image) {\n      this.imageInput.nativeElement.focus();\n    }\n  }\n  populateDom(data: any) {\n    this.book_form.title = data.title\n    this.book_form.author = data.author\n    this.book_form.publisher = data.publisher\n    this.book_form.genre = data.genre\n    this.book_form.description = data.description\n    this.book_form.date_published = data.date_published\n    this.book_form.image = data.image\n  }\n\n  updateBook(bok_form: NgForm) {\n    this.showLoader = true;\n    if (bok_form.valid) {\n      this.bookservice.updateBook(`${getServiceUrl().bookServiceAPI}/books/edit/${this.bookId_param}`, this.book_form).subscribe(data => console.log(data)\n      )\n      setTimeout(()=> {\n        this.router.navigateByUrl(`/book/${this.bookId_param}`).catch(error => {\n          this.showLoader = false;\n          console.log('error navigating', error);\n        });\n      }, 1000)\n    } else {\n      this.errorMessage = \"Please fill all the fields\";\n      this.checkInvalidForm();\n      this.showLoader = false;\n    }\n  }\n\n}\n","<div class=\"loader\" *ngIf=\"loading\">\n  <img src=\"assets/loading-state.gif\" alt=\"loading spinner\"/>\n</div>\n<div class=\"book-form\" *ngIf=\"!loading\">\n  <h5 style=\"text-align: center\">Add New Book</h5>\n  <div class=\"error-message\">\n    <p class=\"error\" *ngIf=\"errorMessage\">{{ errorMessage }}</p>\n  </div>\n  <form (ngSubmit)=\"updateBook(bok_form)\" #bok_form=\"ngForm\">\n    <div class=\"input-row\">\n      <label class=\"label\">Book Name:</label>\n      <input\n        #titleInput\n        type=\"text\"\n        class=\"text-input\"\n        id=\"exampleFormControlInput1\"\n        placeholder=\"title..\"\n        [(ngModel)]=\"book_form.title\"\n        name=\"title\"\n        ngModel\n        required\n      />\n    </div>\n    <small\n      class=\"error-message\"\n      *ngIf=\"titleInput.touched && titleInput.errors\"\n    >\n      enter a valid title\n    </small>\n    <div class=\"input-row\">\n      <label for=\"exampleFormControlInput1\" class=\"label\">Author:</label>\n\n      <input\n        #authorInput\n        type=\"text\"\n        class=\"text-input\"\n        id=\"exampleFormControlInput1\"\n        placeholder=\"author..\"\n        [(ngModel)]=\"book_form.author\"\n        name=\"author\"\n        ngModel\n        required\n      />\n    </div>\n    <small\n      class=\"error-message\"\n      *ngIf=\"authorInput.touched && authorInput.errors\"\n    >\n      enter a valid author name\n    </small>\n    <div class=\"input-row\">\n      <label for=\"exampleFormControlInput1\" class=\"form-label\"\n        >Publisher:</label\n      >\n\n      <input\n        #publisherInput\n        type=\"text\"\n        class=\"text-input\"\n        id=\"exampleFormControlInput1\"\n        placeholder=\"publisher..\"\n        [(ngModel)]=\"book_form.publisher\"\n        name=\"publisher\"\n        ngModel\n        required\n      />\n    </div>\n    <small\n      class=\"error-message\"\n      *ngIf=\"publisherInput.touched && publisherInput.errors\"\n    >\n      enter a valid publisher name\n    </small>\n    <div class=\"input-row\">\n      <label for=\"exampleFormControlInput1\" class=\"label\"\n        >Date published:</label\n      >\n\n      <input\n        #dateInput\n        type=\"date\"\n        id=\"exampleFormControlInput1\"\n        placeholder=\"published on..\"\n        [(ngModel)]=\"book_form.date_published\"\n        name=\"date\"\n        ngModel\n        required\n      />\n    </div>\n    <small class=\"error-message\" *ngIf=\"dateInput.touched && dateInput.errors\">\n      choose a valid date\n    </small>\n    <div class=\"input-row\">\n      <label for=\"exampleFormControlInput1\" class=\"label\"> Genre:</label>\n      <select\n        #genreInput\n        aria-label=\".form-select-sm example\"\n        [(ngModel)]=\"book_form.genre\"\n        name=\"genre\"\n        ngModel\n        required\n      >\n        <option selected>select genre</option>\n        <option value=\"fiction\">fiction</option>\n        <option value=\"autobiography\">autobiography</option>\n        <option value=\"science\">science</option>\n        <option value=\"history\">history</option>\n        <option value=\"mathematics\">mathematics</option>\n        <option value=\"law\">law</option>\n        <option value=\"medicine\">medicine</option>\n        <option value=\"technology & engineering\">technology & engineering</option>\n        <option value=\"finance\">finance</option>\n        <option value=\"art\">art</option>\n        <option value=\"travel\">travel</option>\n        <option value=\"self-help book\">self-help book</option>\n        <option value=\"thriller\">thriller</option>\n      </select>\n    </div>\n    <small\n      class=\"error-message\"\n      *ngIf=\"genreInput.touched && genreInput.errors\"\n    >\n      enter a valid genre\n    </small>\n    <div class=\"input-row\">\n      <label for=\"exampleFormControlInput1\" class=\"label\">Description:</label>\n\n      <textarea\n        cols=\"20\"\n        rows=\"7\"\n        #descriptionInput\n        type=\"text\"\n        class=\"text-input\"\n        id=\"exampleFormControlInput1\"\n        placeholder=\"enter description\"\n        [(ngModel)]=\"book_form.description\"\n        name=\"description\"\n        ngModel\n        required\n      ></textarea>\n    </div>\n    <small\n      class=\"error-message\"\n      *ngIf=\"descriptionInput.touched && descriptionInput.errors\"\n    >\n      enter a valid description\n    </small>\n    <div class=\"input-row\">\n      <label for=\"exampleFormControlInput1\" class=\"label\">Image link:</label>\n\n      <input\n        #imageInput\n        type=\"text\"\n        class=\"text-input\"\n        id=\"exampleFormControlInput1\"\n        placeholder=\"image link..\"\n        [(ngModel)]=\"book_form.image\"\n        name=\"image url\"\n        ngModel\n        required\n      />\n    </div>\n    <small\n      class=\"error-message\"\n      *ngIf=\"imageInput.touched && imageInput.errors\"\n    >\n      enter a valid image link\n    </small>\n    <button type=\"submit\" class=\"button\" [ngClass]=\"{'no-padding': showLoader, 'bg-color': showLoader}\">\n      <span *ngIf=\"!showLoader\">Submit</span>\n      <div class=\"mobile-loader\" *ngIf=\"showLoader\">\n        <img src=\"assets/loading-state.gif\" alt=\"loading spinner\"/>\n      </div>\n    </button>\n  </form>\n</div>\n","export function getServiceUrl() {\n    return {\n      bookServiceAPI: \"https://bookstore-service.et.r.appspot.com/api\",\n      authServiceAPI: \"https://authservice-402805.et.r.appspot.com/api\",\n    };\n}","import { AfterViewInit, Component, ElementRef, ViewChild } from '@angular/core';\nimport { AuthService } from '../services/auth.service';\nimport { Router } from '@angular/router';\nimport { NgForm } from '@angular/forms';\nimport { getServiceUrl } from '../urls';\nimport { TokenStorageServiceService } from '../services/token-storage-service.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements AfterViewInit {\n\n  @ViewChild('usrname') usrname: ElementRef;\n  @ViewChild('passwrd') passwrd: ElementRef;\n  errorMessage: string = '';\n  login_form = {\n    username: '',\n    password: ''\n  };\n  showLoader = false;\n  constructor(private authservice: AuthService, private router: Router, private tokenService: TokenStorageServiceService) { }\n\n  ngAfterViewInit(): void {\n    this.usrname.nativeElement.focus();\n  }\n  signinUser(usrForm: NgForm) {\n    this.showLoader = true;\n    if (usrForm.valid) {\n      this.authservice.loginUser(this.login_form)\n      .subscribe({\n        next: data => this.proccessUserData(data), \n        error: error=> {\n          if(error.status === 404) {\n            this.errorMessage = 'Please check your credentials!';\n            this.showLoader = false;\n          }\n        }\n      });\n    } else {\n      usrForm.control.markAllAsTouched();\n      this.errorMessage = \"Please fill all the fields\";\n      this.checkInvalidForm();\n      this.showLoader = false;\n    }\n\n  }\n  proccessUserData(data: any) {\n    // when credentials are correct\n    if (data) {\n      const redirectTo = this.authservice.getCurrentRoute();\n      localStorage.setItem('userData', JSON.stringify(data.user));\n      this.authservice.setUserData(data);\n      this.authservice.emitUserLoggedIn(data.user);\n      if(redirectTo!==null) {\n        this.router.navigate(['/' + redirectTo]);\n      } else {\n        this.router.navigate(['']);\n      }\n    } \n    this.showLoader = false;\n  }\n\n  checkInvalidForm() {\n    if (!this.login_form.username) {\n      this.usrname.nativeElement.focus();\n    } else if (!this.login_form.password) {\n      this.passwrd.nativeElement.focus();\n    }\n  }\n}\n","<div class=\"login-container\">\n  <div class=\"header\">\n    <img class=\"header-icon\" src=\"assets/enter.png\" alt=\"\" />\n    <h2>Login to BookStore</h2>\n  </div>\n  <div class=\"error-message\">\n    <p class=\"error\" *ngIf=\"errorMessage\">{{ errorMessage }}</p>\n  </div>\n  <form (ngSubmit)=\"signinUser(usrForm)\" #usrForm=\"ngForm\">\n    <div class=\"input-row\">\n      <input\n        id=\"usrname\"\n        type=\"text\"\n        aria-describedby=\"emailHelp\"\n        placeholder=\"Enter username\"\n        [(ngModel)]=\"login_form.username\"\n        [class.is-invalid]=\"usrname.invalid && usrname.touched\"\n        name=\"username\"\n        ngModel\n        #usrname\n        required\n      />\n      <label for=\"usrname\" [ngClass]=\"{'active':login_form.username}\">Username</label>\n    </div>\n    <small *ngIf=\"usrname.invalid && usrname.touched\"\n      >this field is required</small\n    >\n    <div class=\"input-row\">\n      <input\n        id=\"password\"\n        type=\"password\"\n        placeholder=\"Password\"\n        [(ngModel)]=\"login_form.password\"\n        [class.is-invalid]=\"passwrd.invalid && passwrd.touched\"\n        name=\"password\"\n        ngModel\n        #passwrd\n        required\n      />\n      <label for=\"password\" [ngClass]=\"{'active':login_form.password}\">Password</label>\n      <small *ngIf=\"usrname.invalid && usrname.touched\"\n        >this field is required</small\n      >\n    </div>\n    <div class=\"input-row\">\n      <button type=\"submit\" class=\"button\" [ngClass]=\"{'no-padding': showLoader, 'bg-color': showLoader}\" [disabled]=\"showLoader\">\n        <span *ngIf=\"!showLoader\">Login</span>\n        <div class=\"mobile-loader\" *ngIf=\"showLoader\">\n          <img src=\"assets/loading-state.gif\" alt=\"loading spinner\"/>\n        </div>\n      </button>\n    </div>\n    <p class=\"register\">\n      don't have an account?&nbsp;<strong\n        style=\"text-decoration: underline; cursor: pointer\"\n        ><span [routerLink]=\"['/register']\">Create Account</span></strong\n      >\n    </p>\n  </form>\n</div>\n","import { AfterViewInit, Component, ElementRef, OnInit, ViewChild } from '@angular/core';\nimport { AuthService } from '../services/auth.service';\nimport { Router } from '@angular/router';\nimport { NgForm } from '@angular/forms';\nimport { getServiceUrl } from '../urls';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit, AfterViewInit {\n\n  errorMessage: string = '';\n  @ViewChild('_name') _name: ElementRef;\n  @ViewChild('_username') _username: ElementRef;\n  @ViewChild('_email') _email: ElementRef;\n  @ViewChild('_password') _password: ElementRef;\n  @ViewChild('_isAdmin') _isAdmin: ElementRef;\n\n  registration_form = {\n    name: '',\n    username: '',\n    email: '',\n    password: '',\n    isAdmin: false\n  }\n  showLoader = false;\n\n  constructor(private authservice: AuthService, private router: Router) { }\n\n  ngOnInit(): void {\n  }\n  ngAfterViewInit(): void {\n    this._name.nativeElement.focus();\n  }\n  checkInvalidForm() {\n    console.log('checkInvalidForm called ');\n    if (!this.registration_form.name) {\n      this._name.nativeElement.focus();\n    } else if (!this.registration_form.username) {\n      this._username.nativeElement.focus();\n    } else if (!this.registration_form.email) {\n      this._email.nativeElement.focus();\n    } else if (!this.registration_form.password) {\n      this._password.nativeElement.focus();\n    } else if (!this.registration_form.isAdmin) {\n      this._isAdmin.nativeElement.focus();\n    }\n  }\n  toggleValue() {\n    this.registration_form.isAdmin = !this.registration_form.isAdmin\n  }\n  validateUser(data: any) {\n    if (data.status === 409) {\n      this.errorMessage = data.message;\n      this.showLoader = false;\n    } else {\n      this.router.navigate(['/login']);\n    }\n  }\n  createUser(registration_form: NgForm) {\n    this.showLoader = true;\n    if (registration_form.valid) {\n      this.authservice.registerUser(this.registration_form)\n        .subscribe({\n          next: (data) => {\n            this.validateUser(data);\n          },\n          error: (error)=>{\n            this.showLoader = false;\n            this.errorMessage = \"something went wrong!\";\n            console.log('error', error);\n          }\n        }\n        )\n    } else {\n      registration_form.control.markAllAsTouched();\n      this.errorMessage = \"please fill all the fields\";\n      this.checkInvalidForm();\n      this.showLoader = false;\n    }\n  }\n\n}\n","<div class=\"signup-container\">\n  <div class=\"header\">\n    <img class=\"header-icon\" src=\"assets/register.png\" alt=\"\" />\n    <h2>Register Your Account</h2>\n  </div>\n  <div class=\"error-message\" style=\"margin-bottom: 15px\">\n    <p class=\"error\" *ngIf=\"errorMessage\">{{ errorMessage }}</p>\n  </div>\n  <form (ngSubmit)=\"createUser(registr_form)\" #registr_form=\"ngForm\">\n    <div class=\"input-row\">\n      <input\n        id=\"nme\"\n        type=\"text\"\n        aria-describedby=\"emailHelp\"\n        [(ngModel)]=\"registration_form.name\"\n        name=\"name\"\n        placeholder=\"Name\"\n        #_name\n        required\n      />\n      <label for=\"nme\" class=\"input-label\" [ngClass]=\"{'active': registration_form.name}\">Name</label>\n    </div>\n    <div class=\"input-row\">\n      <input\n        id=\"username\"\n        type=\"text\"\n        aria-describedby=\"emailHelp\"\n        [(ngModel)]=\"registration_form.username\"\n        name=\"username\"\n        placeholder=\"Username\"\n        #_username\n        required\n      />\n      <label for=\"username\" class=\"input-label\" [ngClass]=\"{'active': registration_form.username}\">Username</label>\n    </div>\n    <div class=\"input-row\">\n      <input\n        id=\"email\"\n        type=\"email\"\n        aria-describedby=\"emailHelp\"\n        [(ngModel)]=\"registration_form.email\"\n        name=\"email\"\n        placeholder=\"Email\"\n        #_email\n        required\n      />\n      <label for=\"email\" class=\"input-label\" [ngClass]=\"{'active': registration_form.email}\">Email</label>\n    </div>\n    <div class=\"input-row\">\n      <input\n        id=\"password\"\n        type=\"password\"\n        [(ngModel)]=\"registration_form.password\"\n        name=\"password\"\n        placeholder=\"Password\"\n        #_password\n        required\n      />\n      <label for=\"password\" class=\"input-label\" [ngClass]=\"{'active': registration_form.password}\">Password</label>\n    </div>\n    <div class=\"input-row\">\n      <input\n        type=\"checkbox\"\n        value=\"admin\"\n        (change)=\"toggleValue()\"\n        #_isAdmin\n        name=\"isadmin\"\n        id=\"admin\"\n      />\n      <label for=\"admin\"> register as admin </label>\n    </div>\n    <div class=\"input-row\">\n      <button type=\"submit\" class=\"button\" [ngClass]=\"{'no-padding': showLoader, 'bg-color': showLoader}\" [disabled]=\"showLoader\">  \n        <span *ngIf=\"!showLoader\">Register</span>\n        <div class=\"mobile-loader\" *ngIf=\"showLoader\">\n          <img src=\"assets/loading-state.gif\" alt=\"loading spinner\"/>\n        </div></button>\n    </div>\n    <p class=\"login\">\n      already have account?&nbsp;<strong\n        style=\"text-decoration: underline; cursor: pointer\"\n        ><span [routerLink]=\"['/login']\">Login</span></strong\n      >\n    </p>\n  </form>\n</div>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/plugins/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nfunction bootstrap() {\n  platformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n};\n\n\n if (document.readyState === 'complete') {\n   bootstrap();\n } else {\n   document.addEventListener('DOMContentLoaded', bootstrap);\n }\n \n"],"names":[],"sourceRoot":"webpack:///","x_google_ignoreList":[]}